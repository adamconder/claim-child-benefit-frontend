@import java.time.LocalDate

@this(line: Line)

@(model: JourneyModel.Residency.LivedInUkAndAbroad)(implicit messages: Messages)

@line("pdf.alwaysLivedInUk", messages("site.no"))

@model.usualCountryOfResidence.map { country =>
    @line("pdf.usuallyLivesInUk", messages("site.no"))

    @line("pdf.usualCountryOfResidence", country.name)
}.getOrElse(line("pdf.usuallyLivesInUk", messages("site.yes")))

@model.arrivalDate.map { arrivalDate =>
    @line("pdf.arrivedInUk", date(arrivalDate))
}

@line("pdf.workedAbroad", booleanToYesNo(model.countriesWorked.nonEmpty))

@if(model.countriesWorked.nonEmpty) {
    @line("pdf.countriesWorked", model.countriesWorked.map(_.name).mkString(", "))
}

@line("pdf.receivedBenefitsAbroad", booleanToYesNo(model.countriesReceivedBenefits.nonEmpty))

@if(model.countriesReceivedBenefits.nonEmpty) {
    @line("pdf.countriesReceivedBenefits", model.countriesReceivedBenefits.map(_.name).mkString(", "))
}

<fo:block margin-bottom="3mm">
    <fo:block font-weight="bold">@messages("pdf.employmentStatus")</fo:block>
        @model.employmentStatus.map { status =>
            <fo:block width="8cm" wrap-option="wrap">@messages(s"employmentStatus.${status.toString}")</fo:block>
        }
</fo:block>
