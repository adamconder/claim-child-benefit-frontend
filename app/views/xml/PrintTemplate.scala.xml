@import views.xml.xml.sections._

@this(
    layout: Layout,
    applicantDetails: ApplicantDetails,
    paymentDetails: PaymentDetails,
    partnerDetails: PartnerDetails,
    childDetails: ChildDetails,
    declaration: Declaration,
    instructions: Instructions,
    addressLabel: AddressLabel,
    additionalInfoPage: AdditionalInfoPage
)

@(model: JourneyModel)(implicit messages: Messages)

<fo:root xml:lang="en" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" font-family="sans-serif">
    @layout()

    <fo:declarations>
        <pdf:catalog xmlns:pdf="http://xmlgraphics.apache.org/fop/extensions/pdf">
            <pdf:dictionary type="normal" key="ViewerPreferences">
                <pdf:boolean key="DisplayDocTitle">true</pdf:boolean>
            </pdf:dictionary>
        </pdf:catalog>
    </fo:declarations>
    
    @applicantDetails(model)

    @model.relationship.partner.map { partner =>
        @partnerDetails(partner)
    }

    @for((child, index) <- model.children.toList.zipWithIndex) {
        @childDetails(child, (index + 1))
    }

    @paymentDetails(model)

    @{model.additionalInformation match {
        case info: AdditionalInformation.Information => additionalInfoPage(info.value)
        case _ => ()
    }}

    @declaration(model)

    @instructions(model)

    @{if(model.anyDocumentsRequired) {
        addressLabel(model)
    }}

</fo:root>
